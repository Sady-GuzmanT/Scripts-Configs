# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git 
zsh-autosuggestions 
zsh-interactive-cd 
zsh-history-substring-search 
zsh-syntax-highlighting
fzf
history)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

fastfetch
typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# Initialize fzf for zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh



# Custom fzf widget for history search
# fzf-history-widget() {
#     local selected_command
#    selected_command=$(history | fzf --height 40% --layout=reverse --border | sed 's/^[0-9]* //')
#     if [[ -n $selected_command ]]; then
#         LBUFFER+="$selected_command"
#    fi
#    zle reset-prompt
# }
# zle -N fzf-history-widget

#setopt hist_ignore_all_dups     # Remove all previous identical entries when adding a new one
#setopt hist_ignore_dups         # Ignore duplicate commands in the history
#setopt hist_find_no_dups        # Don't show duplicates when searching the history
#setopt hist_save_no_dups        # Avoid saving duplicate commands in the history file
#setopt sharehistory             # Share history between all Zsh sessions


#HISTSIZE=1000                  # Maximum number of commands to keep in history in memory
#SAVEHIST=1000                  # Number of commands to save in the history file
#HISTFILE=~/.zsh_history        # Path to the history file

#export FZF_DEFAULT_COMMAND='history -1000 | sed "s/^[ ]*[0-9]*[ ]*//"'
#export FZF_CTRL_R_OPTS="--height 40% --layout=reverse --border"


#fzf-history-widget() {
#    local selected_command
    # Use the current input (LBUFFER) as a filter for history commands
#    selected_command=$(history | grep -E "^\s*[0-9]+\s+${LBUFFER//\//\\/}" | fzf --height 40% --layout=reverse --border | sed 's/^[0-9]* //')
#    if [[ -n $selected_command ]]; then
#        LBUFFER="$selected_command"
#    fi
#    zle reset-prompt
#}
#zle -N fzf-history-widget



# Bind Ctrl+R to custom fzf history widget
#bindkey '^R' fzf-history-widget

# History options to prevent duplicates and enable shared history
#HISTSIZE=1000
#SAVEHIST=$HISTSIZE
#HISTFILE=~/.zsh_history
#setopt appendhistory sharehistory hist_ignore_all_dups
#setopt hist_find_no_dups hist_save_no_dups hist_ignore_dups

# Custom fzf widget for history search without line numbers
# fzf-history-widget() {
#     local selected_command
#     selected_command=$(history | sed 's/^[ ]*[0-9]*[ ]*//' | fzf --height 40% --layout=reverse --border)
#     if [[ -n $selected_command ]]; then
#         LBUFFER+="$selected_command"
#     fi
#     zle reset-prompt
# }
# zle -N fzf-history-widget

# # Bind Ctrl+R to use the custom fzf history widget
# bindkey '^R' fzf-history-widget

# # History options to prevent duplicates and enable shared history
# HISTSIZE=1000
# SAVEHIST=$HISTSIZE
# HISTFILE=~/.zsh_history
# setopt appendhistory sharehistory hist_ignore_all_dups hist_ignore_dups hist_find_no_dups hist_save_no_dups


# Custom fzf widget for history search with substring matching and without line numbers
fzf-history-widget() {
    local selected_command
    selected_command=$(history | sed 's/^[ ]*[0-9]*[ ]*//' | fzf --height 40% --layout=reverse --border --tac --query="$LBUFFER")
    if [[ -n $selected_command ]]; then
        LBUFFER="$selected_command"
    fi
    zle reset-prompt
}
zle -N fzf-history-widget

# Bind Ctrl+R to use the custom fzf history widget
bindkey '^R' fzf-history-widget

# History options to prevent duplicates and enable shared history
HISTSIZE=1000
SAVEHIST=$HISTSIZE
HISTFILE=~/.zsh_history
setopt appendhistory sharehistory hist_ignore_all_dups hist_ignore_dups hist_find_no_dups hist_save_no_dups
